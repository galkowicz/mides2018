$unit: 1px;

//media query sizes
$media-query-mobile: 576;
$media-query-tablet: 768;
$media-query-narrow-tablet: 950;
$media-query-narrow-desktop: 1370;
$media-query-max-page-desktop: 1600;
$media-query-desktop-13: 1300;
$media-query-desktop-14: 1400;
$media-query-desktop-low: 850;

$mobile: $media-query-mobile * $unit;
$tablet: $media-query-tablet * $unit;
$tablet_minus_1: ($media-query-tablet - 1) * $unit;
$narrow-tablet: $media-query-narrow-tablet * $unit;

@mixin respond-to($media) {
  @if $media == mobile {
    @media only screen and (max-width: $mobile) {
      @content;
    }
  }
  @if $media == mobile-portrait {
    @media only screen and (max-width: $mobile) and (orientation: portrait) {
      @content;
    }
  }
  @if $media == mobile-landscape {
    @media only screen and (max-width: $mobile) and (orientation: landscape) {
      @content;
    }
  } @else if $media == desktop {
    @media only screen and (min-width: $tablet) {
      @content;
    }
  } @else if $media == nodesktop {
    @media only screen and (max-width: $tablet_minus_1) {
      @content;
    }
  }
}

$light-gold: #ad9a65;
$black: #323232;
$grey: #848484;
$logo-orange: #e27d17;

.logo-orange {
  color: $logo-orange;
}

.zero-padding.zero-padding.zero-padding.zero-padding.zero-padding.zero-padding.zero-padding {
  padding: 0 !important;
}


@mixin parallax($img, $height) {
  height: $height;
  background-image: url($img);
  padding-top: 2rem;
  background-attachment: fixed;
  background-size: cover;
  background-repeat: no-repeat;
  @include respond-to(nodesktop) {
    background-attachment: scroll;
  }
}

.extra-bold {
  text-shadow: 0 1px, 1px 0, 1px 1px;
}

@font-face {
  font-family: 'gl-font';
  src: local('gl-font'), url('../fonts/GveretLevinAlefAlefAlef-Regular.woff') format('woff');
}

@font-face {
  font-family: 'lulo-clean';
  src: local('lulo-clean'), url('../fonts/lulo-clean.woff') format('woff');
}
